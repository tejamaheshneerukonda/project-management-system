# Generated by Django 4.2.7 on 2025-09-12 18:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0008_add_attendance_models"),
    ]

    operations = [
        # Update existing Notification model
        migrations.AlterField(
            model_name='notification',
            name='notification_type',
            field=models.CharField(choices=[('SYSTEM', 'System Notification'), ('SECURITY', 'Security Alert'), ('BACKUP', 'Backup Notification'), ('MAINTENANCE', 'Maintenance Alert'), ('USER_ACTION', 'User Action'), ('COMPANY_ACTION', 'Company Action'), ('EMPLOYEE_ACTION', 'Employee Action'), ('ANNOUNCEMENT', 'Company Announcement'), ('PERFORMANCE', 'Performance Update'), ('ATTENDANCE', 'Attendance Alert'), ('LEAVE', 'Leave Request'), ('TIMESHEET', 'Timesheet Update'), ('SHIFT', 'Shift Change'), ('PROJECT', 'Project Update'), ('TASK', 'Task Assignment'), ('DEADLINE', 'Deadline Reminder'), ('BIRTHDAY', 'Birthday Reminder'), ('ANNIVERSARY', 'Work Anniversary'), ('TRAINING', 'Training Reminder'), ('MEETING', 'Meeting Reminder'), ('PAYROLL', 'Payroll Update'), ('BENEFITS', 'Benefits Update'), ('POLICY', 'Policy Change'), ('EMERGENCY', 'Emergency Alert')], max_length=20),
        ),
        migrations.AddField(
            model_name='notification',
            name='priority',
            field=models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10),
        ),
        migrations.AddField(
            model_name='notification',
            name='channel',
            field=models.CharField(choices=[('IN_APP', 'In-App Notification'), ('EMAIL', 'Email Notification'), ('SMS', 'SMS Notification'), ('PUSH', 'Push Notification'), ('BROWSER', 'Browser Notification')], default='IN_APP', max_length=10),
        ),
        migrations.AddField(
            model_name='notification',
            name='employee',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.employee'),
        ),
        migrations.AddField(
            model_name='notification',
            name='is_archived',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='is_sent',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='notification',
            name='read_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='archived_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='sent_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='metadata',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='notification',
            name='action_url',
            field=models.URLField(blank=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='action_text',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='notification',
            name='scheduled_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='notification',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        
        # Create NotificationTemplate model
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_type', models.CharField(choices=[('WELCOME', 'Welcome Message'), ('BIRTHDAY', 'Birthday Greeting'), ('ANNIVERSARY', 'Work Anniversary'), ('PERFORMANCE_REVIEW', 'Performance Review'), ('LEAVE_APPROVED', 'Leave Approved'), ('LEAVE_REJECTED', 'Leave Rejected'), ('SHIFT_CHANGE', 'Shift Change'), ('DEADLINE_REMINDER', 'Deadline Reminder'), ('TASK_ASSIGNED', 'Task Assignment'), ('PROJECT_UPDATE', 'Project Update'), ('ATTENDANCE_ALERT', 'Attendance Alert'), ('TIMESHEET_REMINDER', 'Timesheet Reminder'), ('TRAINING_REMINDER', 'Training Reminder'), ('MEETING_REMINDER', 'Meeting Reminder'), ('POLICY_UPDATE', 'Policy Update'), ('EMERGENCY_ALERT', 'Emergency Alert')], max_length=30, unique=True)),
                ('title_template', models.CharField(max_length=200)),
                ('message_template', models.TextField()),
                ('email_subject_template', models.CharField(blank=True, max_length=200)),
                ('email_template', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='MEDIUM', max_length=10)),
                ('channel', models.CharField(choices=[('IN_APP', 'In-App Notification'), ('EMAIL', 'Email Notification'), ('SMS', 'SMS Notification'), ('PUSH', 'Push Notification'), ('BROWSER', 'Browser Notification')], default='IN_APP', max_length=10)),
                ('variables', models.JSONField(blank=True, default=list, help_text='List of template variables')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['template_type'],
            },
        ),
        
        # Create NotificationPreference model
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_enabled', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('push_enabled', models.BooleanField(default=True)),
                ('browser_enabled', models.BooleanField(default=True)),
                ('in_app_enabled', models.BooleanField(default=True)),
                ('system_notifications', models.BooleanField(default=True)),
                ('performance_notifications', models.BooleanField(default=True)),
                ('attendance_notifications', models.BooleanField(default=True)),
                ('leave_notifications', models.BooleanField(default=True)),
                ('timesheet_notifications', models.BooleanField(default=True)),
                ('shift_notifications', models.BooleanField(default=True)),
                ('project_notifications', models.BooleanField(default=True)),
                ('task_notifications', models.BooleanField(default=True)),
                ('deadline_notifications', models.BooleanField(default=True)),
                ('birthday_notifications', models.BooleanField(default=True)),
                ('anniversary_notifications', models.BooleanField(default=True)),
                ('training_notifications', models.BooleanField(default=True)),
                ('meeting_notifications', models.BooleanField(default=True)),
                ('payroll_notifications', models.BooleanField(default=True)),
                ('benefits_notifications', models.BooleanField(default=True)),
                ('policy_notifications', models.BooleanField(default=True)),
                ('emergency_notifications', models.BooleanField(default=True)),
                ('digest_frequency', models.CharField(choices=[('IMMEDIATE', 'Immediate'), ('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('NEVER', 'Never')], default='IMMEDIATE', max_length=20)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('quiet_hours_enabled', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to='core.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to='auth.user')),
            ],
            options={
                'unique_together': {('user', 'company')},
            },
        ),
        
        # Create NotificationDigest model
        migrations.CreateModel(
            name='NotificationDigest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('digest_type', models.CharField(choices=[('DAILY', 'Daily Digest'), ('WEEKLY', 'Weekly Digest'), ('MONTHLY', 'Monthly Digest')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('is_sent', models.BooleanField(default=False)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivery_method', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification')], default='EMAIL', max_length=20)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_digests', to='core.company')),
                ('notifications', models.ManyToManyField(blank=True, to='core.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_digests', to='auth.user')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
