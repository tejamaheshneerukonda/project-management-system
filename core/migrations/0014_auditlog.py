# Generated by Django 4.2.7 on 2025-09-18 00:10

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("core", "0013_paymentmethod"),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("LOGIN", "User Login"),
                            ("LOGOUT", "User Logout"),
                            ("CREATE", "Create Record"),
                            ("UPDATE", "Update Record"),
                            ("DELETE", "Delete Record"),
                            ("VIEW", "View Record"),
                            ("EXPORT", "Export Data"),
                            ("IMPORT", "Import Data"),
                            ("BULK_ACTION", "Bulk Action"),
                            ("SYSTEM_CONFIG", "System Configuration"),
                            ("USER_MANAGEMENT", "User Management"),
                            ("COMPANY_MANAGEMENT", "Company Management"),
                            ("SUBSCRIPTION_CHANGE", "Subscription Change"),
                            ("PAYMENT_ACTION", "Payment Action"),
                            ("SECURITY_EVENT", "Security Event"),
                            ("API_ACCESS", "API Access"),
                            ("BACKUP_RESTORE", "Backup/Restore"),
                            ("CRITICAL", "Critical Event"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource_type",
                    models.CharField(
                        choices=[
                            ("USER", "User"),
                            ("COMPANY", "Company"),
                            ("EMPLOYEE", "Employee"),
                            ("SUBSCRIPTION", "Subscription"),
                            ("PAYMENT", "Payment"),
                            ("SYSTEM", "System"),
                            ("API", "API"),
                            ("FILE", "File"),
                            ("REPORT", "Report"),
                            ("SETTING", "Setting"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resource_id",
                    models.CharField(
                        blank=True,
                        help_text="ID of the affected resource",
                        max_length=100,
                    ),
                ),
                (
                    "resource_name",
                    models.CharField(
                        blank=True,
                        help_text="Name/description of the affected resource",
                        max_length=200,
                    ),
                ),
                (
                    "action_description",
                    models.TextField(
                        help_text="Detailed description of the action performed"
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="MEDIUM",
                        max_length=10,
                    ),
                ),
                (
                    "success",
                    models.BooleanField(
                        default=True, help_text="Whether the action was successful"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, help_text="Error message if action failed"
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("request_path", models.CharField(blank=True, max_length=500)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                ("session_key", models.CharField(blank=True, max_length=40)),
                (
                    "old_values",
                    models.JSONField(
                        blank=True, help_text="Previous values before change", null=True
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(
                        blank=True, help_text="New values after change", null=True
                    ),
                ),
                (
                    "changed_fields",
                    models.JSONField(
                        blank=True,
                        help_text="List of fields that were changed",
                        null=True,
                    ),
                ),
                (
                    "additional_data",
                    models.JSONField(
                        blank=True, help_text="Additional context data", null=True
                    ),
                ),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="Tags for categorization and filtering"
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to="core.company",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="core_auditl_timesta_80074f_idx"
                    ),
                    models.Index(
                        fields=["user"], name="core_auditl_user_id_2ff9b7_idx"
                    ),
                    models.Index(
                        fields=["action_type"], name="core_auditl_action__e03c3d_idx"
                    ),
                    models.Index(
                        fields=["resource_type"], name="core_auditl_resourc_19ae0b_idx"
                    ),
                    models.Index(
                        fields=["severity"], name="core_auditl_severit_6be3f0_idx"
                    ),
                    models.Index(
                        fields=["company"], name="core_auditl_company_094942_idx"
                    ),
                    models.Index(
                        fields=["success"], name="core_auditl_success_1abdf0_idx"
                    ),
                ],
            },
        ),
    ]
